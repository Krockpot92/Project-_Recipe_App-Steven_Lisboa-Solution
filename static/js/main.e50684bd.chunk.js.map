{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","recipes","setRecipes","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","event","target","value","onSubmit","preventDefault","console","log","htmlFor","type","id","required","placeholder","onChange","RecipeList","recipeList","map","recipe","index","key","src","className","onClick","arr","splice","handleRemove","RecipeData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAgHeA,MA9Gf,YAAgD,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACzBC,EAAmB,CACvBC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,YAAa,IAGf,EAAgCC,mBAASN,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpBF,EAAY,2BACPD,GADM,kBAERG,EAAMC,OAAOV,KAAOS,EAAMC,OAAOC,UAgBtC,OACE,0BAAMX,KAAK,SAASY,SAbD,SAACH,GAEpBA,EAAMI,iBAENf,EAAW,GAAD,mBAAKD,GAAL,CAAcS,KACxBQ,QAAQC,IAAI,OAAOT,GACnBC,EAAYR,KAQV,+BACE,+BACE,4BACE,4BACE,2BAAOiB,QAAQ,QACb,2BACEC,KAAK,OACLC,GAAG,OACHlB,KAAK,OACLmB,UAAY,EACZC,YAAY,OACZC,SAAUb,EACVG,MAAOL,EAASN,SAItB,4BACE,2BAAOgB,QAAQ,WACb,2BACEC,KAAK,OACLC,GAAG,UACHlB,KAAK,UACLmB,UAAY,EACZC,YAAY,UACZC,SAAUb,EACVG,MAAOL,EAASL,YAItB,4BACE,2BAAOe,QAAQ,SACb,2BACEC,KAAK,MACLC,GAAG,QACHlB,KAAK,QACLmB,UAAW,EACXC,YAAY,MACZC,SAAUb,EACVG,MAAOL,EAASJ,UAItB,4BACE,2BAAOc,QAAQ,eACb,8BACEC,KAAM,OACNC,GAAG,cACHlB,KAAK,cACLmB,UAAW,EACXC,YAAY,cACZC,SAAUb,EACVG,MAAOL,EAASH,gBAItB,4BACE,2BAAOa,QAAQ,eACb,8BACEC,KAAK,OACLC,GAAG,cACHlB,KAAK,cACLmB,UAAY,EACZC,YAAY,cACZC,SAAUb,EACVG,MAAOL,EAASF,gBAItB,4BACE,4BAAQa,KAAK,UAAb,gBCpDCK,MAjDf,YAA2C,IAAtBzB,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,WAKrByB,EAAa1B,EAAQ2B,KAAI,SAACC,EAAOC,GACrC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAOzB,MACZ,4BAAKyB,EAAOxB,SACZ,4BAAI,yBAAK2B,IAAKH,EAAOvB,SACrB,wBAAI2B,UAAU,cAAa,2BAAIJ,EAAOtB,cACtC,wBAAI0B,UAAU,cAAa,2BAAIJ,EAAOrB,cACtC,4BAAI,4BAAQJ,KAAK,SAAS8B,QAAS,kBAOxC,SAAsBJ,IACN,IAAXA,IACDK,EAAIC,OAAON,EAAM,GACjB5B,EAAWiC,IAV8BE,CAAaP,KAAjD,eAKNK,EAAG,YAAOlC,GAUd,OACE,yBAAKgC,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BACGN,MCtBIW,EAjBI,CACjB,CACElC,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCIF+B,MAhBf,WACE,MAA8B9B,mBAAS6B,GAAvC,mBAAOrC,EAAP,KAAgBC,EAAhB,KAMA,OACE,yBAAK+B,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAD,CAAYhC,QAASA,EAASC,WAAYA,IAC1C,kBAAC,EAAD,CAAcD,QAASA,EAASC,WAAYA,MCblDsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e50684bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ recipes, setRecipes }) {\n  const initialFormState = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialFormState);\n\n  const handleChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    //type == \"text\" ? (formData.type = \"text\") : (formData.type = \"img\");\n    event.preventDefault();\n    //console.log(\"submitted\", formData.content)\n    setRecipes([...recipes, formData]);\n    console.log(\"blah\",formData)\n    setFormData(initialFormState);\n  };\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <label htmlFor=\"name\">\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  required = {true}\n                  placeholder=\"Name\"\n                  onChange={handleChange}\n                  value={formData.name}\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"cuisine\">\n                <input\n                  type=\"text\"\n                  id=\"cuisine\"\n                  name=\"cuisine\"\n                  required = {true}\n                  placeholder=\"Cuisine\"\n                  onChange={handleChange}\n                  value={formData.cuisine}\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"photo\">\n                <input\n                  type=\"img\"\n                  id=\"photo\"\n                  name=\"photo\"\n                  required= {true}\n                  placeholder=\"URL\"\n                  onChange={handleChange}\n                  value={formData.photo}\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"ingredients\">\n                <textarea\n                  type= \"text\"\n                  id=\"ingredients\"\n                  name=\"ingredients\"\n                  required= {true}\n                  placeholder=\"Ingredients\"\n                  onChange={handleChange}\n                  value={formData.ingredients}\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"preparation\">\n                <textarea\n                  type=\"text\"\n                  id=\"preparation\"\n                  name=\"preparation\"\n                  required = {true}\n                  placeholder=\"Preparation\"\n                  onChange={handleChange}\n                  value={formData.preparation}\n                />\n              </label>\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction RecipeList({recipes,setRecipes}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n  const recipeList = recipes.map((recipe,index)=>{\n    return(\n      <tr key={index}>\n        <td>{recipe.name}</td>\n        <td>{recipe.cuisine}</td>\n        <td><img src={recipe.photo}/></td>\n        <td className=\"content_td\"><p>{recipe.ingredients}</p></td>\n        <td className=\"content_td\"><p>{recipe.preparation}</p></td>\n        <td><button name=\"delete\" onClick={()=> handleRemove(index)}>Delete</button></td>\n      </tr>\n    )\n  })\n\n  let arr = [...recipes]\n   \n   function handleRemove(index){\n     if(index !== -1){\n       arr.splice(index,1)\n       setRecipes(arr)\n     }\n   }\n\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {recipeList}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // TODO: Add the ability for the <RecipeList /> component to list, edit and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} setRecipes={setRecipes}/>\n      <RecipeCreate recipes={recipes} setRecipes={setRecipes}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}